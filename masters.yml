- name: Setup Kubernetes Masters
  hosts: masters
  become: true
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: true

    - name: Create directory for Kubernetes keyring
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Kubernetes APT key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes APT repository
      shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt cache
      apt:
        update_cache: true

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: present

    - name: Hold Kubernetes packages
      command: apt-mark hold kubeadm kubelet kubectl

    - name: Initialize Kubernetes cluster on master1
      command: kubeadm init --control-plane-endpoint "master1:6443" --upload-certs
      when: inventory_hostname == "master1"

    - name: Fetch join command for control plane
      shell: kubeadm token create --print-join-command --certificate-key $(kubeadm init phase upload-certs --upload-certs | tail -1)
      run_once: true
      register: join_command

    - name: Join other masters to the control plane
      command: "{{ join_command.stdout }}"
      when: inventory_hostname != "master1"

